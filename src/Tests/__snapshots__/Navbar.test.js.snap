// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Navbar should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Navbar
    currentPage="homepage"
    favorites={
      Object {
        "array": Array [
          "every",
          "forEach",
        ],
        "string": Array [
          "concat",
          "charCodeAt",
        ],
      }
    }
    setSlideshowPage={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="nav-btn active-btn"
          data-page="homepage"
          onClick={[Function]}
        >
          MEMOIZE
        </div>,
        <div
          className="nav-btn "
          data-page="string"
          onClick={[Function]}
        >
          String
        </div>,
        <div
          className="nav-btn "
          data-page="array"
          onClick={[Function]}
        >
          Array
        </div>,
        <div
          className="nav-btn "
          data-page="favorites"
          onClick={[Function]}
        >
          Favorites (
          4
          )
        </div>,
      ],
      "className": "nav-container",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "MEMOIZE",
          "className": "nav-btn active-btn",
          "data-page": "homepage",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "MEMOIZE",
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "String",
          "className": "nav-btn ",
          "data-page": "string",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "String",
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Array",
          "className": "nav-btn ",
          "data-page": "array",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "Array",
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Favorites (",
            4,
            ")",
          ],
          "className": "nav-btn ",
          "data-page": "favorites",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          "Favorites (",
          4,
          ")",
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="nav-btn active-btn"
            data-page="homepage"
            onClick={[Function]}
          >
            MEMOIZE
          </div>,
          <div
            className="nav-btn "
            data-page="string"
            onClick={[Function]}
          >
            String
          </div>,
          <div
            className="nav-btn "
            data-page="array"
            onClick={[Function]}
          >
            Array
          </div>,
          <div
            className="nav-btn "
            data-page="favorites"
            onClick={[Function]}
          >
            Favorites (
            4
            )
          </div>,
        ],
        "className": "nav-container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "MEMOIZE",
            "className": "nav-btn active-btn",
            "data-page": "homepage",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "MEMOIZE",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "String",
            "className": "nav-btn ",
            "data-page": "string",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "String",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Array",
            "className": "nav-btn ",
            "data-page": "array",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Array",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Favorites (",
              4,
              ")",
            ],
            "className": "nav-btn ",
            "data-page": "favorites",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            "Favorites (",
            4,
            ")",
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
